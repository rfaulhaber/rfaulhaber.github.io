<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About on Ryan Faulhaber</title>
    <link>/</link>
    <description>Recent content in About on Ryan Faulhaber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Aug 2020 22:06:00 -0400</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Some First Impressions of Nix</title>
      <link>/posts/nix-first-impressions/</link>
      <pubDate>Fri, 28 Aug 2020 22:06:00 -0400</pubDate>
      
      <guid>/posts/nix-first-impressions/</guid>
      <description>&lt;p&gt;In my relatively few years of software development I&amp;rsquo;ve seen first hand how hard it can be to set up a consistent environment, development or otherwise, across a team, and I think Nix might be a solution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cool Emacs Things: Edit Files Over SSH</title>
      <link>/posts/cool-emacs-tramp/</link>
      <pubDate>Sat, 22 Aug 2020 14:43:00 -0400</pubDate>
      
      <guid>/posts/cool-emacs-tramp/</guid>
      <description>This is the first installment of an indefinite series calling (in lieu of a better name) &amp;ldquo;Cool Emacs Things,&amp;rdquo; little things about Emacs that makes it a very handy editor.
Today&amp;rsquo;s entry: Editing files over SSH.
This was something I discovered recently by accident. I run a private email server and the IMAP portion of the server is handled by Dovecot. Dovecot is great but by default the configuration is spread across dozens of files, and, while trying to tediously edit multiple files over SSH in Vim, I thought, &amp;ldquo;Wouldn&amp;rsquo;t it be nice if I could do this with Emacs?</description>
    </item>
    
    <item>
      <title>Writing an Emacs module in Rust</title>
      <link>/posts/first-emacs-module-rust/</link>
      <pubDate>Fri, 14 Aug 2020 14:30:00 -0400</pubDate>
      
      <guid>/posts/first-emacs-module-rust/</guid>
      <description>&lt;p&gt;Recently I learned that Emacs supports linking with dynamic modules, so I tried writing one in Rust.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>You Should Try Linux</title>
      <link>/posts/try-linux/</link>
      <pubDate>Wed, 05 Aug 2020 21:51:00 -0400</pubDate>
      
      <guid>/posts/try-linux/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using Linux since about 2013 and it&amp;rsquo;s been a consistently rewarding experience. Not only am I far more productive on Linux than I am on macOS or Windows, I have the satisfaction of using a system that&amp;rsquo;s uniquely mine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lessons Learned from Functional Programming</title>
      <link>/posts/fp-lessons/</link>
      <pubDate>Sun, 02 Aug 2020 14:41:00 -0400</pubDate>
      
      <guid>/posts/fp-lessons/</guid>
      <description>Learning about functional programming has changed the way I write and think about code. These are some ideas I&amp;rsquo;ve tried to import back into JavaScript.</description>
    </item>
    
    <item>
      <title>Ways Emacs Has Changed What I Do</title>
      <link>/posts/things-emacs-has-changed/</link>
      <pubDate>Thu, 23 Jul 2020 22:58:00 -0400</pubDate>
      
      <guid>/posts/things-emacs-has-changed/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ryanfaulhaber.com/posts/try-emacs/&#34;&gt;Previously&lt;/a&gt; I had written about trying Emacs, but looking back on that post I felt like I was bit vague about the ways in which it&amp;rsquo;s changed the things I do, so I wanted to provide some examples. Emacs has replaced a number of programs in my life, and not all of them are developer related.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>You Should Try Emacs</title>
      <link>/posts/try-emacs/</link>
      <pubDate>Mon, 13 Jul 2020 16:00:00 -0400</pubDate>
      
      <guid>/posts/try-emacs/</guid>
      <description>&lt;p&gt;No, really, you should try Emacs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Guide to Promises in JavaScript</title>
      <link>/posts/js-promises/</link>
      <pubDate>Tue, 02 Jun 2020 14:00:00 -0400</pubDate>
      
      <guid>/posts/js-promises/</guid>
      <description>Although the async and await keywords are now part of standard JavaScript, under the hood they ultimately use Promises. Here we&amp;rsquo;ll explore what Promises are, why they&amp;rsquo;re needed, and how you can &amp;ldquo;promisify&amp;rdquo; callbacks in JavaScript.
I find a lot of newcomers are often confused by terms like &amp;ldquo;callbacks&amp;rdquo;, &amp;ldquo;Promises&amp;rdquo;, and what exactly async and await do. I hope to clear that up with this article.
For the sake of clarity, this guide will use function syntax, and not arrow functions.</description>
    </item>
    
    <item>
      <title>Ryan Faulhaber</title>
      <link>/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Working With Me</title>
      <link>/working/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/working/</guid>
      <description>I am an experienced software developer focusing mostly on full-stack web and mobile development. I am available to work on new projects part-time.
Over the last few years of my professional life I&amp;rsquo;ve worked in full-stack web and mobile development, and I have a limited amount of systems programming via the Rust programming language. I&amp;rsquo;m experienced with all things JavaScript in particular.
I am most engaged in my work when I am able to work on complex problems with open-ended solutions.</description>
    </item>
    
  </channel>
</rss>