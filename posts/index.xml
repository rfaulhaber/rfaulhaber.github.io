<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ryan Faulhaber</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Ryan Faulhaber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Aug 2020 21:51:00 -0400</lastBuildDate>
    
	<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>You Should Try Linux</title>
      <link>/posts/try-linux/</link>
      <pubDate>Wed, 05 Aug 2020 21:51:00 -0400</pubDate>
      
      <guid>/posts/try-linux/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using Linux since about 2013 and it&amp;rsquo;s been a consistently rewarding experience. Not only am I far more productive on Linux than I am on macOS or Windows, I have the satisfaction of using a system that&amp;rsquo;s uniquely mine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lessons Learned from Functional Programming</title>
      <link>/posts/fp-lessons/</link>
      <pubDate>Sun, 02 Aug 2020 14:41:00 -0400</pubDate>
      
      <guid>/posts/fp-lessons/</guid>
      <description>Learning about functional programming has changed the way I write and think about code. These are some ideas I&amp;rsquo;ve tried to import back into JavaScript.</description>
    </item>
    
    <item>
      <title>Ways Emacs Has Changed What I Do</title>
      <link>/posts/things-emacs-has-changed/</link>
      <pubDate>Thu, 23 Jul 2020 22:58:00 -0400</pubDate>
      
      <guid>/posts/things-emacs-has-changed/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ryanfaulhaber.com/posts/try-emacs/&#34;&gt;Previously&lt;/a&gt; I had written about trying Emacs, but looking back on that post I felt like I was bit vague about the ways in which it&amp;rsquo;s changed the things I do, so I wanted to provide some examples. Emacs has replaced a number of programs in my life, and not all of them are developer related.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>You Should Try Emacs</title>
      <link>/posts/try-emacs/</link>
      <pubDate>Mon, 13 Jul 2020 16:00:00 -0400</pubDate>
      
      <guid>/posts/try-emacs/</guid>
      <description>&lt;p&gt;No, really, you should try Emacs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Guide to Promises in JavaScript</title>
      <link>/posts/js-promises/</link>
      <pubDate>Tue, 02 Jun 2020 14:00:00 -0400</pubDate>
      
      <guid>/posts/js-promises/</guid>
      <description>Although the async and await keywords are now part of standard JavaScript, under the hood they ultimately use Promises. Here we&amp;rsquo;ll explore what Promises are, why they&amp;rsquo;re needed, and how you can &amp;ldquo;promisify&amp;rdquo; callbacks in JavaScript.
I find a lot of newcomers are often confused by terms like &amp;ldquo;callbacks&amp;rdquo;, &amp;ldquo;Promises&amp;rdquo;, and what exactly async and await do. I hope to clear that up with this article.
For the sake of clarity, this guide will use function syntax, and not arrow functions.</description>
    </item>
    
  </channel>
</rss>